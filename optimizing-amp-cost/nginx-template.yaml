apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: sample-nginx
data:
  nginx.conf: |
    worker_processes  auto;
    pid /tmp/nginx/nginx.pid;
    
    events {
        worker_connections  1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        # access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  10;
        keepalive_requests 10;

        #gzip  on;

        #include /etc/nginx/conf.d/*.conf;
        
        client_body_temp_path /tmp/nginx/client_temp;
        proxy_temp_path       /tmp/nginx/proxy_temp;
        fastcgi_temp_path     /tmp/nginx/fastcgi_temp;
        uwsgi_temp_path       /tmp/nginx/uwsgi_temp;
        scgi_temp_path        /tmp/nginx/scgi_temp;
        
        server {
            listen       8080;
            listen  [::]:8080;
            server_name  localhost;
            
            root /usr/share/nginx/html;

            #access_log  /var/log/nginx/host.access.log  main;

            #error_page  404              /404.html;

            # redirect server error pages to the static page /50x.html
            #
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx-$N
  name: nginx-$N
  namespace: sample-nginx
spec:
  replicas: 10
  selector:
    matchLabels:
      app: nginx-$N
  template:
    metadata:
      labels:
        app: nginx-$N
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        seccompProfile:
          type: RuntimeDefault
      containers:
      - image: public.ecr.aws/nginx/nginx@sha256:2ebf3d369d813bcc6a531ba43e1859bd91ad5c8217ae33b821f5ffada06a6cd4
        imagePullPolicy: Always
        name: nginx
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
        resources:
          requests:
            cpu: "50m"
            memory: "100Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
          failureThreshold: 3
          timeoutSeconds: 1
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: nginx-config
          mountPath: "/etc/nginx/nginx.conf"
          subPath: nginx.conf
        - mountPath: /etc/nginx/conf.d
          name: nginx-confd
        - mountPath: /var/cache/nginx
          name: nginx-cache
        - mountPath: /tmp/nginx
          name: nginx-temp
      nodeSelector:
        app: nginx
      volumes:
      - name: nginx-config
        configMap:
          name: nginx
      - name: nginx-confd
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-temp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx-$N
  name: nginx-$N
  namespace: sample-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: nginx-$N
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nginx-network-policy-$N
  namespace: sample-nginx
spec:
  podSelector:
    matchLabels:
      app: nginx-$N
  policyTypes:
  - Ingress
  ingress:
  - ports:
    - port: 8080
      protocol: TCP